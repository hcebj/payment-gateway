package com.hce.paymentgateway.api.dbs;

import com.hce.paymentgateway.util.Order;
import lombok.Getter;
import lombok.Setter;

@Setter
@Getter
public class RequestDetails implements Instr {

    @Order(order = 1)
    private String recordType;
    @Order(order = 2)
    private String productType;
    @Order(order = 3)
    private String originatingAccountNumber;
    @Order(order = 4)
    private String originatingAccountCurrency;
    @Order(order = 5)
    private String customerOrBatchReference;
    @Order(order = 6)
    private String paymentCurrency;
    @Order(order = 7)
    private String batchId;
    @Order(order = 8)
    private String paymentDate;
    @Order(order = 9)
    private String bankCharges;
    @Order(order = 10)
    private String debitAccountForBankCharges;
    @Order(order = 11)
    private String receivingPartyName;
    @Order(order = 12)
    private String payableTo;
    @Order(order = 13)
    private String receivingPartyAddress1;
    @Order(order = 14)
    private String receivingPartyAddress2;
    @Order(order = 15)
    private String receivingPartyAddress3;
    @Order(order = 16)
    private String receivingAccountNumberIBAN;
    @Order(order = 17)
    private String countrySpecific;
    @Order(order = 18)
    private String receivingBankCode;
    @Order(order = 19)
    private String receivingBranchCode;
    @Order(order = 20)
    private String clearingCode;
    @Order(order = 21)
    private String beneficiaryBankSwiftBic;
    @Order(order = 22)
    private String beneficiaryBankName;
    @Order(order = 23)
    private String beneficiaryBankAddress;
    @Order(order = 24)
    private String beneficiaryBankCountry;
    @Order(order = 25)
    private String routingCode;
    @Order(order = 26)
    private String intermediaryBankSwiftBic;
    @Order(order = 27)
    private String amountCurrency;
    @Order(order = 28)
    private String amount;
    @Order(order = 29)
    private String fxContractReference1;
    @Order(order = 30)
    private String amounttobeUtilized1;
    @Order(order = 31)
    private String fxContractReference2;
    @Order(order = 32)
    private String amounttobeUtilized2;
    @Order(order = 33)
    private String transactionCode;
    @Order(order = 34)
    private String particularsBeneficaryPayerReference;
    @Order(order = 35)
    private String dDAReferenceOrReference;
    @Order(order = 36)
    private String paymentDetails;
    @Order(order = 37)
    private String instructiontoOrderingBank;
    @Order(order = 38)
    private String beneficiaryResidentStatus;
    @Order(order = 39)
    private String beneficiaryCategory;
    @Order(order = 40)
    private String transactionRelationship;
    @Order(order = 41)
    private String payeeRole;
    @Order(order = 42)
    private String remitterIdentity;
    @Order(order = 43)
    private String purposeofPayment;
    @Order(order = 44)
    private String supplementaryInfo;
    @Order(order = 45)
    private String deliveryMode;
    @Order(order = 46)
    private String printAtLocationPickUpLocation;
    @Order(order = 47)
    private String payableLocation;
    @Order(order = 48)
    private String mailtoPartyName;
    @Order(order = 49)
    private String mailtoPartyAddress1;
    @Order(order = 50)
    private String mailtoPartyAddress2;
    @Order(order = 51)
    private String mailtoPartyAddress3;
    @Order(order = 52)
    private String reservedField;
    @Order(order = 53)
    private String postalCode;
    @Order(order = 54)
    private String email1;
    @Order(order = 55)
    private String email2;
    @Order(order = 56)
    private String email3;
    @Order(order = 57)
    private String email4;
    @Order(order = 58)
    private String email5;
    @Order(order = 59)
    private String phoneNumber1;
    @Order(order = 60)
    private String phoneNumber2;
    @Order(order = 61)
    private String phoneNumber3;
    @Order(order = 62)
    private String phoneNumber4;
    @Order(order = 63)
    private String phoneNumber5;
    @Order(order = 64)
    private String invoiceDetails;
    @Order(order = 65)
    private String clientReference1;
    @Order(order = 66)
    private String clientReference2;
    @Order(order = 67)
    private String clientReference3;
    @Order(order = 68)
    private String clientReference4;
    /*@Order(order = 69)
    private String specificPaymentPurpose;
    @Order(order = 70)
    private String taxFreeGoodsRelated;
    @Order(order = 71)
    private String paymentNature;
    @Order(order = 72)
    private String fXBureauApprovalReferenceNumber;
    @Order(order = 73)
    private String paymentCategory1;
    @Order(order = 74)
    private String seriesCodeOrSequenceNumber1;
    @Order(order = 75)
    private String paymentCategory2;
    @Order(order = 76)
    private String seriesCode2;
    @Order(order = 77)
    private String contractNo;
    @Order(order = 78)
    private String invoiceNo;
    @Order(order = 79)
    private String transactionRemark1;
    @Order(order = 80)
    private String transactionRemark2;
    @Order(order = 81)
    private String tradeType;
    @Order(order = 82)
    private String transactionType;
    @Order(order = 83)
    private String proportionofContractAmount;
    @Order(order = 84)
    private String expectedDeclarationDays;
    @Order(order = 85)
    private String declaredCustomsorNot;
    @Order(order = 86)
    private String urrencyofCustomsDeclaration;
    @Order(order = 87)
    private String ertificateofApprovalNo;
    @Order(order = 88)
    private String advancePaymentAmount;
    @Order(order = 89)
    private String remarks;
    @Order(order = 90)
    private String customsDeclarationWithNoGoods;*/

}
